% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spheatNAMESextractWP.R
\name{spheatNAMESextractWP}
\alias{spheatNAMESextractWP}
\title{Extract WorldPop Values for Regions In A Dataset}
\usage{
spheatNAMESextractWP(dataset, colname = "PN", datatype = "Births",
  gadmlevel = "lcl", levellimit = 0, options, year, fill = TRUE,
  googleapikey, orideGADM = FALSE, orideWP = FALSE, deleteGADM = TRUE,
  deleteWP = TRUE, skipMissing = FALSE, deleteMissing = FALSE)
}
\arguments{
\item{dataset}{(character), the name of the data frame containing a column
of place names. e.g. \code{“mydataframe”}}

\item{colname}{(character), the name of the column in the data frame
containing place names e.g. \code{“mycolname”}}

\item{datatype}{(character), the datatype you would like to see what options
are available for WorldPop UK data. The available datatypes can be attained
with the function getWPdatatypes() Example datatypes: \code{“Population”} or
\code{“Stunting”}}

\item{gadmlevel}{(numeric or character), the gadm level you wish to extract data for.
You can type an ingteger level or "lowest" for the lowest level among each country in your dataset,
or "lcl" for lowest common level among each country. Use fill=TRUE to extract more than one level.
Default is lowest common level (gadmlevel="lcl")}

\item{levellimit}{(numeric), only usable if fill=TRUE, the gadm level you wish to fill data to.
Default is levellimit=0 for the country limitlevel set to country gadm files.}

\item{options}{(character), the options of the tif dataset you would like to
download. The available options can be attained with the function
getWPoptions() e.g. \code{“ppp”} or \code{c(“F”, "interdecile")}
If options is not entered, default is the options of the first file of the country and datatype availabile at WorldPop UK.}

\item{year}{(numeric), the year of the dataset you would like to download.
Available years are given by the getWPoptions() function.
If year is not entered, default is the year of the first file of the country and datatype availabile at WorldPop UK.}

\item{googleapikey}{(character), a valid Google Maps API key. See
https://developers.google.com/maps/documentation/javascript/get-api-key to
attain one.}

\item{orideGADM}{(logical), TRUE or FALSE that the GADM file downloads should be overriden.
Use if you already have all the countries GADM files in your working directory.
The program auto-looks for already downloaded sets, so don't delete files from working directory if you only have some countries.
Default=FALSE.}

\item{orideWP}{(logical), TRUE or FALSE that the WorldPop file downloads should be overriden.
Use if you already have all the countries WorldPop files in your working directory.
The program auto-looks for already downloaded sets, so don't delete files from working directory if you only have some countries.
Default=FALSE.}

\item{deleteGADM}{(logical), TRUE or FALSE that the GADM file downloads should be deleted after analyzing is complete.
Completely deletes the GADM files from your computer.
Pro: Save disk space and running many countries, this function deletes as each file is analyzed in a sequence,
thus no more than one country is downloaded at once.
Con: To do another analysis the files will have to be downloaded again.
Default is deleteGADM=TRUE}

\item{deleteWP}{(logical), TRUE or FALSE that the WorldPop file downloads should be deleted after analyzing is complete.
Completely deletes the WorldPop files from your computer.
Pro: Save disk space and running many countries, this function deletes as each file is analyzed in a sequence,
thus no more than one country is downloaded at once.
Con: To do another analysis the files will have to be downloaded again.
Default is deleteWP=TRUE}

\item{skipMissing}{(logical), TRUE or FALSE that locations that cannot be found and geocoded by google should be ignored.
When FALSE, the program prompts for each not found entry. When TRUE, the program automatically skips. If not running interactively,
skipMissing or deleteMissing must be TRUE. Default is skipMissing=FALSE.}

\item{skipMissing}{(logical), TRUE or FALSE that locations that cannot be found and geocoded by google will be ignored and marked for deletion.
When FALSE, the program prompts for each not found entry. When TRUE, the program automatically skips and marks entries not found for deletion.
If not running interactively, skipMissing or deleteMissing must be TRUE. Default is skipMissing=FALSE.}
}
\value{
A \code{data.frame} named MASTER_NamesExt in your global environment with your original dataset bound with data
extracted from WorldPop with the specified inputs. MASTER_NamesExt will include all entries from original dataset,
not just ones where a GADM and WorldPop layer was found. Also comes with area in M^2 and KM^2 of the extraction polygon
for ease of population density and other density calculations.
}
\description{
This function does three main tasks in order:
1. Geocodes and assesses the GADM level of every entry in your dataset (via Google and GADM.org)
2. Downloads the desired WorldPop UK raster dataset based on inputs
and extracts values for every geocoded entry in dataset
3. Combine extracted stats back onto original dataframe
and delete (if desired) all GADM and WorldPop sets from disk (to hold one country of sets on disk at a time)
}
\details{
This function has the POTENTIAL TO BE VERY TIME AND COMPUTATION INTENSIVE. Suppose you
have 100 countries in your dataset, this function will download 100 gadm files and as many worldpop sets
that exist for those 100 countries AND analyze all of them. I have used the most up to date loading and extraction methods available
(sf and velox extractions) to speed this up as much as possible. An estimated overall progress is periodically given.
A future update will include parallelization capacity.

At this time, only one WorldPop Raster at a time can be analyzed (with only one set of options).
In a future update, this function will be updated to handle multiple rasters (i.e. multiple options)

As a bonus and to make matching WorldPop sets easier, you don't have to be terribly precise with your
place names. The function includes correction algorithms before searching through google maps (which is quite flexible).
Furthermore you can mix place names without issue (i.e. one cell be "1313 Disneyland Dr., CA, USA" and another be "Nigeria" without
problems other than your level comparisons being inconsistent on extraction values)

See getWPdatatypes() and getWPoptions() for possible inputs for options and years. If missing from inputs, the program
takes the first file available based on the other inputs.
}
\examples{
###FULL EXAMPLES###
###Creating Data###
test.vec <- as.data.frame(c(rep("Stade Charles De Gaulle, RN11, Porto-Novo, Benin", 20), rep("Cotonou, Benin", 20),
                            rep("ethiopia", 20), rep("University of Denver", 20),
                            rep("1313 Disneyland Dr, Anaheim, CA 92802", 20)))
colnames(test.vec)<- "namelook"

apikey <- "My google api key here"


###Many of the arguments below are defaults, but including them for show
###Completing the function
spheatNAMESextractWP(dataset="test.vec", colname="namelook", datatype="Births",
                     options="pp", year=2015, googleapikey=apikey, fill=TRUE, orideGADM=FALSE, orideWP=FALSE,
                     deleteGADM=TRUE, deleteWP=TRUE, skipMissing=FALSE, deleteMissing=FALSE)


}
\references{
WorldPop UK data are attained through the WorldPop UK website.
These data are licensensed under the Creative Commons Attribution 4.0
License. \url{http://www.worldpop.org.uk/}.
GADM DATA are attained through the GADM project website.
Commercial use of this function is not allowed without prior permission from
GADM.org. \url{http://gadm.org/}.
}
\author{
Neal Thomas Barsch
}
